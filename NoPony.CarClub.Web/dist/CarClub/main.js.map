{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/auth-login.component.ts","./src/app/auth/login/auth-login.component.html","./src/app/auth/register/auth-register.component.ts","./src/app/auth/register/auth-register.component.html","./src/app/auth/verify/auth-verify.component.ts","./src/app/auth/verify/auth-verify.component.html","./src/app/common/interceptor/content-type/content-type.interceptor.ts","./src/app/common/interceptor/error/error.interceptor.ts","./src/app/common/interceptor/jwt/jwt.interceptor.ts","./src/app/custom-url-serializer.ts","./src/app/events/events.component.ts","./src/app/events/events.component.html","./src/app/events/events.module.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/footer/footer.module.ts","./src/app/forum/board-create/board-create.component.ts","./src/app/forum/board-create/board-create.component.html","./src/app/forum/board-list/board-list.component.html","./src/app/forum/board-list/board-list.component.ts","./src/app/forum/board-view/board-view.component.ts","./src/app/forum/board-view/board-view.component.html","./src/app/forum/board.service.ts","./src/app/forum/forum-view/forum-view.component.ts","./src/app/forum/forum-view/forum-view.component.html","./src/app/forum/forum.module.ts","./src/app/forum/post-create/post-create.component.ts","./src/app/forum/post-create/post-create.component.html","./src/app/forum/post-list/post-list.component.html","./src/app/forum/post-list/post-list.component.ts","./src/app/forum/post-view/post-view.component.ts","./src/app/forum/post-view/post-view.component.html","./src/app/forum/post.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/header/header.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts","./src/app/home/section-about/section-about.component.ts","./src/app/home/section-about/section-about.component.html","./src/app/home/section-events/section-events.component.ts","./src/app/home/section-events/section-events.component.html","./src/app/home/section-splash/section-splash.component.ts","./src/app/home/section-splash/section-splash.component.html","./src/app/navigation/navigation.module.ts","./src/app/navigation/navigation.service.ts","./src/app/navigation/sidenav/sidenav.component.ts","./src/app/navigation/sidenav/sidenav.component.html","./src/app/navigation/topnav/topnav.component.html","./src/app/navigation/topnav/topnav.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ForumViewComponent } from './forum/forum-view/forum-view.component';\r\nimport { BoardViewComponent } from './forum/board-view/board-view.component';\r\nimport { PostViewComponent } from './forum/post-view/post-view.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent, pathMatch: 'full' },\r\n  { path: 'verify/:verify', component: HomeComponent },\r\n\r\n  { path: 'forum', component: ForumViewComponent },\r\n  { path: 'board/:key', component: BoardViewComponent },\r\n  { path: 'post/:key', component: PostViewComponent },\r\n\r\n  { path: '**', redirectTo: 'home' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'NoPony - Car Club';\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <app-header (SidenavToggle)=\"sidenav.toggle()\"></app-header>\r\n  <mat-sidenav-container autosize class=\"container\">\r\n    <mat-sidenav #sidenav role=\"navigation\">\r\n      <app-sidenav (SidenavClose)=\"sidenav.close()\"></app-sidenav>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <div class=\"page-content\">\r\n        <main>\r\n          <router-outlet></router-outlet>\r\n          <app-footer></app-footer>\r\n        </main>\r\n      </div>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UrlSerializer } from '@angular/router';\r\n\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { ContentTypeInterceptor } from 'src/app/common/interceptor/content-type/content-type.interceptor';\r\nimport { JwtInterceptor } from 'src/app/common/interceptor/jwt/jwt.interceptor';\r\nimport { ErrorInterceptor } from 'src/app/common/interceptor/error/error.interceptor';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CustomUrlSerializer } from './custom-url-serializer';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { NavigationModule } from './navigation/navigation.module';\r\nimport { HeaderModule } from './header/header.module';\r\nimport { FooterModule } from './footer/footer.module';\r\nimport { HomeModule } from './home/home.module';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { ForumModule } from './forum/forum.module';\r\nimport { EventsModule } from './events/events.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n\r\n    AppRoutingModule,\r\n\r\n    NavigationModule,\r\n    HeaderModule,\r\n    FooterModule,\r\n    HomeModule,\r\n    AuthModule,\r\n    ForumModule,\r\n    EventsModule,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ContentTypeInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: UrlSerializer, useClass: CustomUrlSerializer },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { AuthLoginComponent } from './login/auth-login.component';\r\nimport { AuthRegisterComponent } from './register/auth-register.component';\r\nimport { AuthVerifyComponent } from './verify/auth-verify.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthLoginComponent,\r\n    AuthRegisterComponent,\r\n    AuthVerifyComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [\r\n    AuthLoginComponent,\r\n    AuthRegisterComponent,\r\n    AuthVerifyComponent,\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, interval } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport { AuthRegisterRequestDto } from '../common/dto/auth-register-request-dto.interface';\r\nimport { AuthLoginRequestDto } from '../common/dto/auth-login-request-dto.interface';\r\nimport { AuthLoginResponseDto } from '../common/dto/auth-login-response-dto.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private baseUrl: string = environment.apiUrl;\r\n\r\n  private authenticatedSubject: BehaviorSubject<boolean>;\r\n  public Authenticated: Observable<boolean>;\r\n\r\n  public AccessToken: string | null;\r\n\r\n  // private refreshTokenTimeout: NodeJS.Timeout | undefined;\r\n\r\n  constructor(private http: HttpClient) {\r\n    const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n    if (refreshToken != null) {\r\n      this.AccessToken = JSON.parse(refreshToken);\r\n      this.authenticatedSubject = new BehaviorSubject<boolean>(true);\r\n    } else {\r\n      this.AccessToken = null;\r\n      this.authenticatedSubject = new BehaviorSubject<boolean>(false);\r\n    }\r\n\r\n    this.Authenticated = this.authenticatedSubject.asObservable();\r\n  }\r\n\r\n  public get AuthenticatedCurrent(): boolean {\r\n    return this.authenticatedSubject.value;\r\n  }\r\n\r\n  public register(request: AuthRegisterRequestDto): Observable<object> {\r\n    return this.http.post(`${this.baseUrl}Auth/Register`, request);\r\n  }\r\n\r\n  public verify(key: string): Observable<object> {\r\n    return this.http.get(`${this.baseUrl}Auth/EmailVerify/${key}`);\r\n  }\r\n\r\n  public login(request: AuthLoginRequestDto): Observable<AuthLoginResponseDto> {\r\n    return this.http\r\n      .post<AuthLoginResponseDto>(\r\n        `${this.baseUrl}Auth/Login`,\r\n        JSON.stringify(request)\r\n      )\r\n      .pipe(\r\n        map((response) => {\r\n          localStorage.setItem(\r\n            'refreshToken',\r\n            JSON.stringify(response.refreshToken)\r\n          );\r\n\r\n          this.AccessToken = response.accessToken;\r\n          this.authenticatedSubject.next(true);\r\n\r\n          this.startRefreshTimer();\r\n\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  public logout(): void {\r\n    localStorage.removeItem('refreshToken');\r\n\r\n    this.AccessToken = null;\r\n    this.authenticatedSubject.next(false);\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.http\r\n      .get<AuthLoginResponseDto>(`${this.baseUrl}Auth/Refresh`)\r\n      .subscribe((response) => {\r\n        localStorage.setItem(\r\n          'refreshToken',\r\n          JSON.stringify(response.refreshToken)\r\n        );\r\n\r\n        this.AccessToken = response.accessToken;\r\n        this.authenticatedSubject.next(true);\r\n\r\n        this.startRefreshTimer();\r\n      });\r\n  }\r\n\r\n  private startRefreshTimer(): void {\r\n    if (this.AccessToken) {\r\n      const tokenBody = JSON.parse(atob(this.AccessToken.split('.')[1]));\r\n\r\n      const tokenExpires = new Date(tokenBody.exp * 1000);\r\n      const timeout = tokenExpires.getTime() - Date.now() - 60 * 1000;\r\n\r\n      interval(timeout).subscribe(() => {\r\n        if (this.AuthenticatedCurrent) {\r\n          console.log('Refreshing token');\r\n\r\n          this.refresh();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // private stopRefreshTimer() {\r\n  //   if (!!this.refreshTokenTimeout)\r\n  //     clearTimeout(this.refreshTokenTimeout);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { AuthService } from '../auth.service';\r\nimport { AuthLoginRequestDto } from '../../common/dto/auth-login-request-dto.interface';\r\n\r\n@Component({\r\n  selector: 'app-auth-login',\r\n  templateUrl: './auth-login.component.html',\r\n  styleUrls: ['./auth-login.component.scss'],\r\n})\r\n// export class AuthLoginComponent implements OnInit {\r\nexport class AuthLoginComponent {\r\n  public emailControl: FormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n  public passwordControl: FormControl = new FormControl('', [\r\n    Validators.required,\r\n  ]);\r\n\r\n  public email = '';\r\n  public password = '';\r\n  public hidePassword = true;\r\n\r\n  public idle = true;\r\n  public busy = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AuthLoginComponent>,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n\r\n  public login(): void {\r\n    if (!this.emailControl.valid) {\r\n      return;\r\n    }\r\n\r\n    if (!this.passwordControl.valid) {\r\n      return;\r\n    }\r\n\r\n    this.idle = false;\r\n    this.busy = true;\r\n\r\n    const request: AuthLoginRequestDto = {\r\n      email: this.emailControl.value,\r\n      password: this.passwordControl.value,\r\n    };\r\n\r\n    this.authService.login(request).subscribe(\r\n      () => {\r\n        this.dialogRef.close();\r\n      },\r\n      (e) => {\r\n        console.log(`Error ${e}`);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Login</h2>\r\n\r\n<mat-dialog-content>\r\n  <div *ngIf=\"idle\">\r\n    <p>Enter your Email and Password.</p>\r\n    <mat-form-field appearance=\"fill\" class=\"text\">\r\n      <mat-label>Email Address</mat-label>\r\n      <input matInput [formControl]=\"emailControl\" placeholder=\"john.doe@example.com\">\r\n      <mat-error *ngIf=\"emailControl.hasError('email') || emailControl.hasError('required')\">\r\n        A valid email address is required.\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\" class=\"text\">\r\n      <mat-label>Password</mat-label>\r\n      <input matInput [formControl]=\"passwordControl\" [type]=\"hidePassword ? 'password' : 'text'\">\r\n      <button mat-icon-button matSuffix tabindex=\"-1\" (click)=\"hidePassword = !hidePassword\"\r\n        [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hidePassword\">\r\n        <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div *ngIf=\"busy\">\r\n    <p>Logging in</p>\r\n    <div class=\"container\">\r\n      <mat-progress-spinner color=\"primary\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions *ngIf=\"idle\">\r\n  <a routerLink=\"/home\">Forgot password?</a>\r\n  <span class=\"spacer\"></span>\r\n  <button mat-raised-button color=\"primary\" (click)=\"login()\">Login</button>\r\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { AuthService } from '../auth.service';\r\nimport { AuthRegisterRequestDto } from '../../common/dto/auth-register-request-dto.interface';\r\n\r\n@Component({\r\n  selector: 'app-auth-register',\r\n  templateUrl: './auth-register.component.html',\r\n  styleUrls: ['./auth-register.component.scss'],\r\n})\r\n// export class AuthRegisterComponent implements OnInit {\r\nexport class AuthRegisterComponent {\r\n  public hidePassword = true;\r\n\r\n  public stateIdle = 0;\r\n  public stateBusy = 1;\r\n  public stateSuccess = 2;\r\n  public stateError = 3;\r\n\r\n  public state = this.stateIdle;\r\n\r\n  public email = '';\r\n\r\n  public emailControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n  public passwordControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.minLength(8),\r\n  ]);\r\n\r\n  public verifyControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.pattern(this.passwordControl.value),\r\n  ]);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AuthRegisterComponent>,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n\r\n  public join(): void {\r\n    if (!this.emailControl.valid) {\r\n      return;\r\n    }\r\n\r\n    if (!this.passwordControl.valid) {\r\n      return;\r\n    }\r\n\r\n    if (!this.verifyControl.valid) {\r\n      return;\r\n    }\r\n\r\n    this.state = this.stateBusy;\r\n\r\n    const request: AuthRegisterRequestDto = {\r\n      email: this.emailControl.value,\r\n      password: this.passwordControl.value,\r\n      verify: this.verifyControl.value,\r\n    };\r\n\r\n    this.email = this.emailControl.value;\r\n\r\n    this.authService.register(request).subscribe(\r\n      () => {\r\n        this.state = this.stateSuccess;\r\n      },\r\n\r\n      () => {\r\n        this.state = this.stateError;\r\n      }\r\n    );\r\n  }\r\n\r\n  public close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Join</h2>\r\n<mat-dialog-content>\r\n  <div *ngIf=\"state === stateIdle\">\r\n    <p>Enter your Email and Password to join.</p>\r\n    <mat-form-field appearance=\"fill\" class=\"text\">\r\n      <mat-label>Email Address</mat-label>\r\n      <input matInput [formControl]=\"emailControl\" placeholder=\"john.doe@example.com\">\r\n      <mat-error *ngIf=\"emailControl.hasError('email') || emailControl.hasError('required')\">\r\n        Please enter a valid email address\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\" class=\"text\">\r\n      <mat-label>Password</mat-label>\r\n      <input matInput [formControl]=\"passwordControl\" [type]=\"hidePassword ? 'password' : 'text'\">\r\n      <mat-error *ngIf=\"passwordControl.hasError('required')\">\r\n        Please enter a password\r\n      </mat-error>\r\n      <button mat-icon-button matSuffix tabindex=\"-1\" (click)=\"hidePassword = !hidePassword\"\r\n        [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hidePassword\">\r\n        <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\" class=\"text\">\r\n      <mat-label>Verify Password</mat-label>\r\n      <input matInput [formControl]=\"verifyControl\" [type]=\"hidePassword ? 'password' : 'text'\">\r\n      <mat-error *ngIf=\"verifyControl.hasError('required')\">\r\n        Please enter a password\r\n      </mat-error>\r\n      <button mat-icon-button matSuffix tabindex=\"-1\" (click)=\"hidePassword = !hidePassword\"\r\n        [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hidePassword\">\r\n        <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div *ngIf=\"state === stateBusy\">\r\n    <p>Joining</p>\r\n    <div class=\"spinContainer\">\r\n      <mat-progress-spinner color=\"primary\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"state === stateSuccess\">\r\n    <p>An verification email has been sent to <u>{{ email }}</u>.</p>\r\n    <p>Please check your emails, and click the link to verify your account.</p>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions *ngIf=\"state === stateIdle\">\r\n  <span class=\"spacer\"></span>\r\n  <button mat-raised-button (click)=\"join()\" color=\"primary\">Join</button>\r\n</mat-dialog-actions>\r\n\r\n<mat-dialog-actions *ngIf=\"state === stateSuccess\">\r\n  <span class=\"spacer\"></span>\r\n  <button mat-raised-button (click)=\"close()\" color=\"primary\">Ok</button>\r\n</mat-dialog-actions>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-auth-verify',\r\n  templateUrl: './auth-verify.component.html',\r\n  styleUrls: ['./auth-verify.component.scss']\r\n})\r\nexport class AuthVerifyComponent implements OnInit {\r\n  public busy = true;\r\n  public success = false;\r\n  public fail = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private dialogRef: MatDialogRef<AuthVerifyComponent>,\r\n    private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.verify(this.data.key)\r\n      .subscribe(\r\n        () => {\r\n          this.busy = false;\r\n          this.success = true;\r\n        },\r\n        () => {\r\n          this.busy = false;\r\n          this.fail = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  public close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Email Verify</h2>\r\n<mat-dialog-content>\r\n    <div *ngIf=\"busy\">\r\n        <p>Verifying your account.</p>\r\n        <div class=\"container\">\r\n            <mat-progress-spinner color=\"primary\" mode=\"indeterminate\"></mat-progress-spinner>\r\n        </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"success\">\r\n        <p>Your account has been verified, and you may now log in.</p>\r\n    </div>\r\n\r\n    <div *ngIf=\"fail\">\r\n        <p>Account verification failed.</p>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions *ngIf=\"!busy\">\r\n    <span class=\"spacer\"></span>\r\n    <button mat-raised-button color=\"primary\" (click)=\"close()\">Ok</button>\r\n</mat-dialog-actions>","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ContentTypeInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError((err) => {\r\n        if (err.status === 401) {\r\n          // auto logout if 401 response returned from api\r\n          this.authService.logout();\r\n          // location.reload();\r\n        }\r\n\r\n        const error = err.error.message || err.statusText;\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const authenticated = this.authService.AuthenticatedCurrent;\r\n    const accessToken = this.authService.AccessToken;\r\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n\r\n    if (authenticated && isApiUrl) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${accessToken ?? ''}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { DefaultUrlSerializer, UrlTree } from '@angular/router';\r\n\r\nexport class CustomUrlSerializer extends DefaultUrlSerializer {\r\n    parse(url: string): UrlTree {\r\n        return super.parse(url.toLowerCase());\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.scss'],\r\n})\r\n// export class EventsComponent implements OnInit {\r\nexport class EventsComponent {\r\n  constructor() {}\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n}\r\n","<div class=\"background\">\r\n  <div class=\"border\">\r\n    <div class=\"container\">\r\n      <p>Events works!</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EventsComponent } from './events.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EventsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    EventsComponent,\r\n  ]\r\n})\r\nexport class EventsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss'],\r\n})\r\n// export class FooterComponent implements OnInit {\r\nexport class FooterComponent {\r\n  constructor() {}\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n}\r\n","<div class=\"footer\">\r\n  <img src=\"/assets/wrx-club-wa-logo-black.png\" />\r\n  © 2020 WRX Club WA.\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FooterComponent } from './footer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FooterComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    FooterComponent,\r\n  ]\r\n})\r\nexport class FooterModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { BoardService } from '../board.service';\nimport { BoardCreateDto } from '../dto/board-create-dto.interface';\n\n@Component({\n  selector: 'app-board-create',\n  templateUrl: './board-create.component.html',\n  styleUrls: ['./board-create.component.scss'],\n})\n// export class BoardCreateComponent implements OnInit {\nexport class BoardCreateComponent {\n  public titleControl: FormControl = new FormControl('', [Validators.required]);\n\n  public descriptionControl: FormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  public idle = true;\n  public busy = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<BoardCreateComponent>,\n    private boardService: BoardService\n  ) {}\n\n  // ngOnInit(): void {\n  // }\n\n  public create(): void {\n    this.idle = false;\n    this.busy = true;\n\n    const request: BoardCreateDto = {\n      title: this.titleControl.value,\n      note: this.descriptionControl.value,\n    };\n\n    this.boardService.create(request).subscribe(\n      () => {\n        this.dialogRef.close();\n      },\n      (e) => {\n        console.log(`Error ${e}`);\n      }\n    );\n  }\n}\n","<h2 mat-dialog-title>Create new board</h2>\n\n<mat-dialog-content>\n  <div *ngIf=\"idle\">\n    <p>Enter a Title and Description for the new Board.</p>\n    <mat-form-field appearance=\"fill\" class=\"text\">\n      <mat-label>Title</mat-label>\n      <input matInput [formControl]=\"titleControl\">\n      <mat-error *ngIf=\"titleControl.hasError('required')\">\n        A Title is required.\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"text\">\n      <mat-label>Description</mat-label>\n      <input matInput [formControl]=\"descriptionControl\">\n      <mat-error *ngIf=\"descriptionControl.hasError('required')\">\n        A Description is required.\n      </mat-error>\n    </mat-form-field>\n  </div>\n\n  <div *ngIf=\"busy\">\n    <p>Creating board</p>\n    <div class=\"container\">\n      <mat-progress-spinner color=\"primary\" mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <span class=\"spacer\"></span>\n  <button mat-raised-button color=\"primary\" (click)=\"create()\">Create</button>\n</mat-dialog-actions>","<mat-paginator #paginatorTop *ngIf=\"(model?.count ?? 0) > pageSize\" [length]=\"model?.count ?? 0\"\n    [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"showPageTop($event)\" aria-label=\"Select page\">\n</mat-paginator>\n\n<div *ngFor=\"let board of model?.items\">\n    <mat-card (click)=\"showBoard(board)\" class=\"board mat-elevation-z4\">\n        <mat-card-title>{{ board.title }}</mat-card-title>\n        <mat-card-subtitle>{{ board.note }}</mat-card-subtitle>\n    </mat-card>\n    <br>\n</div>\n<span>\n    <mat-paginator #paginatorBottom *ngIf=\"(model?.count ?? 0) > pageSize\" [length]=\"model?.count ?? 0\"\n        [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"showPageBottom($event)\"\n        aria-label=\"Select page\">\n    </mat-paginator>\n</span>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\n\nimport { PageResponseDto } from 'src/app/common/dto/page-response-dto.interface';\nimport { BoardService } from '../board.service';\nimport { BoardSearchDto } from '../dto/board-search-dto.interface';\n\n@Component({\n  selector: 'app-board-list',\n  templateUrl: './board-list.component.html',\n  styleUrls: ['./board-list.component.scss'],\n})\n// export class BoardListComponent implements OnInit {\nexport class BoardListComponent {\n  @ViewChild('paginatorTop', { static: false }) paginatorTop!: MatPaginator;\n  @ViewChild('paginatorBottom', { static: false })\n  paginatorBottom!: MatPaginator;\n\n  public pageSizeOptions: number[] = [5, 10, 25, 100];\n  public pageSize = 10;\n  public pageNumber = 1;\n  public model: PageResponseDto<BoardSearchDto> | null = null;\n\n  constructor(\n    private router: Router,\n    private dialog: MatDialog,\n    private boardService: BoardService\n  ) {\n    this.fetchPage();\n  }\n\n  // ngOnInit(): void {}\n\n  public showPageTop(event: PageEvent): void {\n    this.pageNumber = event.pageIndex + 1;\n    this.pageSize = event.pageSize;\n\n    this.paginatorBottom.pageIndex = event.pageIndex;\n    this.paginatorBottom.pageSize = event.pageSize;\n\n    this.fetchPage();\n  }\n\n  public showPageBottom(event: PageEvent): void {\n    this.pageNumber = event.pageIndex + 1;\n    this.pageSize = event.pageSize;\n\n    this.paginatorTop.pageIndex = event.pageIndex;\n    this.paginatorTop.pageSize = event.pageSize;\n\n    this.fetchPage();\n  }\n\n  private fetchPage(): void {\n    this.boardService\n      .search({ page: this.pageNumber, size: this.pageSize })\n      .subscribe(\n        (x) => {\n          this.model = x;\n        },\n        (e) => {\n          console.log(`Error ${e}`);\n        }\n      );\n  }\n\n  public showBoard(board: BoardSearchDto): void {\n    this.router.navigate([`/board/${board.key}`]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BoardService } from '../board.service';\nimport { BoardReadDto } from '../dto/board-read-dto.interface';\nimport { PostCreateComponent } from '../post-create/post-create.component';\n\n@Component({\n  selector: 'app-board-view',\n  templateUrl: './board-view.component.html',\n  styleUrls: ['./board-view.component.scss'],\n})\n// export class BoardComponent implements OnInit {\nexport class BoardViewComponent {\n  public boardKey: string | null = null;\n  public board: BoardReadDto | null = null;\n  public posts: string[] | null = null;\n\n  constructor(\n    private actRoute: ActivatedRoute,\n    private boardService: BoardService,\n    private dialog: MatDialog\n  ) {\n    this.boardKey = this.actRoute.snapshot.params.key;\n\n    if (!!this.boardKey) {\n      const key: string = this.boardKey;\n\n      boardService.read(key).subscribe(\n        (i) => {\n          this.board = i;\n        },\n        (e) => {\n          console.log(`Error ${e}`);\n        }\n      );\n    }\n  }\n\n  // ngOnInit(): void {\n  // }\n\n  public createPost(): void {\n    const dialogRef = this.dialog.open(PostCreateComponent, {\n      width: '400px',\n      data: {\n        boardKey: this.boardKey,\n      }\n    });\n\n    dialogRef.afterClosed().subscribe();\n  }\n}\n","<div class=\"container\">\n    <div fxFill fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div><h1>{{board?.title}}</h1></div>\n        <div><button mat-button (click)=\"createPost()\">Create Post</button></div>\n    </div>\n    {{board?.note}}\n    <app-post-list></app-post-list>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\nimport { PageRequestDto } from '../common/dto/page-request-dto.interface';\nimport { PageResponseDto } from '../common/dto/page-response-dto.interface';\nimport { BoardCreateDto } from './dto/board-create-dto.interface';\nimport { BoardSearchDto } from './dto/board-search-dto.interface';\nimport { BoardReadDto } from './dto/board-read-dto.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BoardService {\n  private baseUrl: string = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  public create(request: BoardCreateDto): Observable<object> {\n    return this.http.post(`${this.baseUrl}Board`, request);\n  }\n\n  public read(request: string): Observable<BoardReadDto> {\n    return this.http.get<BoardReadDto>(`${this.baseUrl}Board/${request}`);\n  }\n\n  public search(\n    request: PageRequestDto\n  ): Observable<PageResponseDto<BoardSearchDto>> {\n    const requestParams = new HttpParams()\n      .append('page', request.page)\n      .append('size', request.size);\n\n    if (!!request.query) {\n      requestParams.append('query', request.query);\n    }\n\n    if (!!request.filter) {\n      requestParams.append('filter', request.filter);\n    }\n\n    return this.http.get<PageResponseDto<BoardSearchDto>>(\n      `${this.baseUrl}Board/Search`,\n      { params: requestParams }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BoardCreateComponent } from '../board-create/board-create.component';\r\n\r\n@Component({\r\n  selector: 'app-forum-view',\r\n  templateUrl: './forum-view.component.html',\r\n  styleUrls: ['./forum-view.component.scss'],\r\n})\r\n// export class ForumComponent implements OnInit {\r\nexport class ForumViewComponent {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n\r\n  public createBoard(): void {\r\n    const dialogRef = this.dialog.open(BoardCreateComponent, {\r\n      width: '400px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div fxFill fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n        <div><h1>Member Forum</h1></div>\r\n        <div><button mat-button (click)=\"createBoard()\">New</button></div>\r\n    </div>\r\n    <app-board-list></app-board-list>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { ForumViewComponent } from './forum-view/forum-view.component';\r\nimport { BoardCreateComponent } from './board-create/board-create.component';\r\nimport { BoardListComponent } from './board-list/board-list.component';\r\nimport { BoardViewComponent } from './board-view/board-view.component';\r\nimport { PostCreateComponent } from './post-create/post-create.component';\r\nimport { PostListComponent } from './post-list/post-list.component';\nimport { PostViewComponent } from './post-view/post-view.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ForumViewComponent,\r\n    BoardCreateComponent,\r\n    BoardListComponent,\r\n    BoardViewComponent,\r\n    PostCreateComponent,\r\n    PostListComponent,\r\n    PostViewComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [\r\n    ForumViewComponent,\r\n    BoardCreateComponent,\r\n    BoardListComponent,\r\n    BoardViewComponent,\r\n    PostCreateComponent,\r\n    PostListComponent,\r\n  ]\r\n})\r\nexport class ForumModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { PostService } from '../post.service';\nimport { PostCreateDto } from '../dto/post-create-dto.interface';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.scss'],\n})\nexport class PostCreateComponent implements OnInit {\n  public titleControl: FormControl = new FormControl('', [Validators.required]);\n\n  public contentControl: FormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  public status = 'INITIAL';\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<PostCreateComponent>,\n    private postService: PostService\n  ) {}\n\n  ngOnInit(): void {\n    this.status = 'IDLE';\n  }\n\n  public create(): void {\n    this.status = 'POSTING';\n\n    const request: PostCreateDto = {\n      key: this.data.boardKey,\n      title: this.titleControl.value,\n      content: this.contentControl.value,\n    };\n\n    this.postService.create(request).subscribe(\n      () => {\n        this.dialogRef.close();\n      },\n      (e) => {\n        console.log(`Error ${e}`);\n      }\n    );\n  }\n}\n","<h2 mat-dialog-title>Create new Post</h2>\n\n<mat-dialog-content>\n  <div *ngIf=\"status === 'IDLE'\">\n    <p>Enter a Title and the Content for your new post.</p>\n    <mat-form-field appearance=\"fill\" class=\"text\">\n      <mat-label>Title</mat-label>\n      <input matInput [formControl]=\"titleControl\">\n      <mat-error *ngIf=\"titleControl.hasError('required')\">\n        A Title is required.\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"text\">\n      <mat-label>Content</mat-label>\n      <input matInput [formControl]=\"contentControl\">\n      <mat-error *ngIf=\"contentControl.hasError('required')\">\n        Some content is required.\n      </mat-error>\n    </mat-form-field>\n  </div>\n\n  <div *ngIf=\"status === 'POSTING'\">\n    <p>Creating post</p>\n    <div class=\"container\">\n      <mat-progress-spinner color=\"primary\" mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <span class=\"spacer\"></span>\n  <button mat-raised-button color=\"primary\" (click)=\"create()\">Create</button>\n</mat-dialog-actions>\n","<mat-paginator #paginatorTop *ngIf=\"(model?.count ?? 0) > pageSize\" [length]=\"model?.count ?? 0\"\n    [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"showPageTop($event)\" aria-label=\"Select page\">\n</mat-paginator>\n\n<div *ngFor=\"let post of model?.items\">\n    <mat-card (click)=\"showPost(post)\" class=\"post mat-elevation-z4\">\n        <mat-card-title>{{ post.title }}</mat-card-title>\n        <mat-card-subtitle>{{ post.content }}</mat-card-subtitle>\n    </mat-card>\n    <br>\n</div>\n<span>\n    <mat-paginator #paginatorBottom *ngIf=\"(model?.count ?? 0) > pageSize\" [length]=\"model?.count ?? 0\"\n        [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"showPageBottom($event)\"\n        aria-label=\"Select page\">\n    </mat-paginator>\n</span>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\n\nimport { PageResponseDto } from 'src/app/common/dto/page-response-dto.interface';\nimport { PostService } from '../post.service';\nimport { PostSearchDto } from '../dto/post-search-dto.interface';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.scss'],\n})\n// export class PostListComponent implements OnInit {\nexport class PostListComponent {\n  @ViewChild('paginatorTop', { static: false }) paginatorTop!: MatPaginator;\n  @ViewChild('paginatorBottom', { static: false })\n  paginatorBottom!: MatPaginator;\n\n  public pageSizeOptions: number[] = [5, 10, 25, 100];\n  public pageSize = 10;\n  public pageNumber = 1;\n  public model: PageResponseDto<PostSearchDto> | null = null;\n\n  constructor(\n    private router: Router,\n    private dialog: MatDialog,\n    private postService: PostService\n  ) {\n    this.fetchPage();\n  }\n\n  // ngOnInit(): void {}\n\n  public showPageTop(event: PageEvent): void {\n    this.pageNumber = event.pageIndex + 1;\n    this.pageSize = event.pageSize;\n\n    this.paginatorBottom.pageIndex = event.pageIndex;\n    this.paginatorBottom.pageSize = event.pageSize;\n\n    this.fetchPage();\n  }\n\n  public showPageBottom(event: PageEvent): void {\n    this.pageNumber = event.pageIndex + 1;\n    this.pageSize = event.pageSize;\n\n    this.paginatorTop.pageIndex = event.pageIndex;\n    this.paginatorTop.pageSize = event.pageSize;\n\n    this.fetchPage();\n  }\n\n  private fetchPage(): void {\n    this.postService\n      .search({ page: this.pageNumber, size: this.pageSize })\n      .subscribe(\n        (x) => {\n          this.model = x;\n        },\n        (e) => {\n          console.log(`Error ${e}`);\n        }\n      );\n  }\n\n  public showPost(post: PostSearchDto): void {\n    this.router.navigate([`/post/${post.key}`]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post-view',\n  templateUrl: './post-view.component.html',\n  styleUrls: ['./post-view.component.scss']\n})\nexport class PostViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>post-view works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\nimport { PageRequestDto } from '../common/dto/page-request-dto.interface';\nimport { PageResponseDto } from '../common/dto/page-response-dto.interface';\nimport { PostCreateDto } from '../forum/dto/post-create-dto.interface';\nimport { PostSearchDto } from './dto/post-search-dto.interface';\nimport { PostReadDto } from './dto/post-read-dto.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  private baseUrl: string = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  public create(request: PostCreateDto): Observable<object> {\n    return this.http.post(`${this.baseUrl}Post`, request);\n  }\n\n  public read(request: string): Observable<PostReadDto> {\n    return this.http.get<PostReadDto>(`${this.baseUrl}Post/${request}`);\n  }\n\n  public search(\n    request: PageRequestDto\n  ): Observable<PageResponseDto<PostSearchDto>> {\n    const requestParams = new HttpParams()\n      .append('page', request.page)\n      .append('size', request.size);\n\n    if (!!request.query) {\n      requestParams.append('query', request.query);\n    }\n\n    if (!!request.filter) {\n      requestParams.append('filter', request.filter);\n    }\n\n    return this.http.get<PageResponseDto<PostSearchDto>>(\n      `${this.baseUrl}Post/Search`,\n      { params: requestParams }\n    );\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\n// export class HeaderComponent implements OnInit {\r\nexport class HeaderComponent {\r\n  @Output() public SidenavToggle = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n\r\n  public toggleSidenav(): void {\r\n    this.SidenavToggle.emit();\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <div fxFill fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxHide.gt-sm>\r\n      <button mat-icon-button (click)=\"toggleSidenav()\">\r\n          <mat-icon>menu</mat-icon>\r\n      </button>\r\n      <a routerLink=\"/home\">\r\n          WRX Owners Club of Western Australia\r\n      </a>\r\n  </div>\r\n\r\n  <div fxFill fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxHide.lt-md>\r\n      <a routerLink=\"/home\">\r\n          WRX Owners Club of Western Australia\r\n      </a>\r\n      <app-topnav></app-topnav>\r\n  </div>\r\n</mat-toolbar>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nimport { NavigationModule } from '../navigation/navigation.module';\r\nimport { HeaderComponent } from './header.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n\r\n    FlexLayoutModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n\r\n    NavigationModule,\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n  ]\r\n})\r\nexport class HeaderModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { AuthVerifyComponent } from 'src/app/auth/verify/auth-verify.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  public emailVerify: string | null = null;\r\n\r\n  constructor(private actRoute: ActivatedRoute, private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.actRoute.paramMap.subscribe(params => {\r\n      this.emailVerify = params.get('verify');\r\n\r\n      if (this.emailVerify != null) {\r\n        const dialogRef = this.dialog.open(AuthVerifyComponent, {\r\n          width: '400px',\r\n          data: {\r\n            key: this.emailVerify,\r\n          }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div>\r\n  <app-section-splash></app-section-splash>\r\n  <app-section-events></app-section-events>\r\n  <app-section-about></app-section-about>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HomeComponent } from './home.component';\r\nimport { SectionSplashComponent } from './section-splash/section-splash.component';\r\nimport { SectionEventsComponent } from './section-events/section-events.component';\r\nimport { SectionAboutComponent } from './section-about/section-about.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n\r\n    SectionSplashComponent,\r\n    SectionEventsComponent,\r\n    SectionAboutComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    HomeComponent,\r\n  ]\r\n})\r\nexport class HomeModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-section-about',\r\n  templateUrl: './section-about.component.html',\r\n  styleUrls: ['./section-about.component.scss'],\r\n})\r\n// export class SectionAboutComponent implements OnInit {\r\nexport class SectionAboutComponent {\r\n  constructor() {}\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n}\r\n","<div class=\"background\">\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-section-events',\r\n  templateUrl: './section-events.component.html',\r\n  styleUrls: ['./section-events.component.scss'],\r\n})\r\n// export class SectionEventsComponent implements OnInit {\r\nexport class SectionEventsComponent {\r\n  constructor() {}\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n}\r\n","<div class=\"background\">\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-section-splash',\r\n  templateUrl: './section-splash.component.html',\r\n  styleUrls: ['./section-splash.component.scss'],\r\n})\r\n// export class SectionSplashComponent implements OnInit {\r\nexport class SectionSplashComponent {\r\n  constructor() {}\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n}\r\n","<div class=\"background\">\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatListModule } from '@angular/material/list';\n\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { TopnavComponent } from './topnav/topnav.component';\n\n@NgModule({\n  declarations: [SidenavComponent, TopnavComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatListModule,\n  ],\n  exports: [SidenavComponent, TopnavComponent],\n})\nexport class NavigationModule {}\n","import { Injectable } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { NavigationModel } from './navigation-model.interface';\nimport { AuthLoginComponent } from '../auth/login/auth-login.component';\nimport { AuthRegisterComponent } from '../auth/register/auth-register.component';\nimport { AuthService } from '../auth/auth.service';\nimport { UserModel } from '../common/model/user-model.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  private menusSubject: BehaviorSubject<NavigationModel[]>;\n  public Menus: Observable<NavigationModel[]>;\n\n  private authenticated = false;\n\n  constructor(private dialog: MatDialog, private authService: AuthService) {\n    this.authService.Authenticated.subscribe((x) => (this.authenticated = x));\n\n    this.menusSubject = new BehaviorSubject<NavigationModel[]>([\n      {\n        Icon: 'home',\n        Label: 'Home',\n        Show: () => true,\n        RouterLink: '/home',\n      },\n\n      {\n        Icon: 'login',\n        Label: 'Login',\n        Show: () => !this.authenticated,\n        Click: () => {\n          const dialogRef = this.dialog.open(AuthLoginComponent, {\n            width: '400px',\n          });\n\n          dialogRef.afterClosed().subscribe();\n        },\n      },\n\n      {\n        Icon: 'app_registration',\n        Label: 'Join',\n        Show: () => !this.authenticated,\n        Click: () => {\n          const dialogRef = this.dialog.open(AuthRegisterComponent, {\n            width: '400px',\n          });\n\n          dialogRef.afterClosed().subscribe();\n        },\n      },\n\n      {\n        Icon: 'forum',\n        Label: 'Forum',\n        RouterLink: '/forum',\n        Show: () => this.authenticated,\n      },\n\n      {\n        Icon: 'logout',\n        Label: 'Logout',\n        RouterLink: '/home',\n        Show: () => this.authenticated,\n        Click: () => {\n          authService.logout();\n        },\n      },\n    ]);\n\n    this.Menus = this.menusSubject.asObservable();\n  }\n\n  public get MenusCurrent(): NavigationModel[] {\n    return this.menusSubject.value;\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { NavigationService } from '../navigation.service';\nimport { NavigationModel } from '../navigation-model.interface';\nimport { UserModel } from 'src/app/common/model/user-model.interface';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n})\n// export class SidenavComponent implements OnInit {\nexport class SidenavComponent {\n  @Output() SidenavClose = new EventEmitter();\n\n  public menuList: NavigationModel[] = [];\n  private authenticated = false;\n\n  constructor(\n    private navService: NavigationService,\n    private authService: AuthService\n  ) {\n    this.navService.Menus.subscribe((x) => (this.menuList = x));\n    this.authService.Authenticated.subscribe((x) => (this.authenticated = x));\n  }\n\n  // ngOnInit(): void {\n  // }\n\n  public handleClick(m: NavigationModel): void {\n    this.closeSidenav();\n\n    if (!!m.Click) {\n      m.Click();\n    }\n  }\n\n  private closeSidenav(): void {\n    this.SidenavClose.emit();\n  }\n}\n","<mat-nav-list>\n    <span *ngFor=\"let i of menuList\">\n        <span *ngIf=\"i.Show()\">\n            <span *ngIf=\"!!i.RouterLink\">\n                <a mat-list-item [routerLink]=\"i.RouterLink\" (click)=\"handleClick(i)\">\n                    <mat-icon>{{ i.Icon }}</mat-icon>\n                    &nbsp;\n                    <span class=\"nav-caption\">{{ i.Label }}</span>\n                </a>\n            </span>\n\n            <span *ngIf=\"!i.RouterLink\">\n                <a mat-list-item (click)=\"handleClick(i)\">\n                    <mat-icon>{{ i.Icon }}</mat-icon>\n                    &nbsp;\n                    <span class=\"nav-caption\">{{ i.Label }}</span>\n                </a>\n            </span>\n        </span>\n    </span>\n</mat-nav-list>","<span *ngFor=\"let i of menuList\">\n    <span *ngIf=\"i.Show()\">\n        <span *ngIf=\"!!i.RouterLink\">\n            <button mat-button [routerLink]=\"i.RouterLink\" (click)=\"handleClick(i)\">\n                {{ i.Label }}\n            </button>\n        </span>\n\n        <span *ngIf=\"!i.RouterLink\">\n            <button mat-button (click)=\"handleClick(i)\">\n                {{ i.Label }}\n            </button>\n        </span>\n    </span>\n</span>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { NavigationService } from '../navigation.service';\nimport { NavigationModel } from '../navigation-model.interface';\nimport { UserModel } from 'src/app/common/model/user-model.interface';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.scss'],\n})\n// export class TopnavComponent implements OnInit {\nexport class TopnavComponent {\n  public menuList: NavigationModel[] = [];\n  public authenticated = false;\n\n  constructor(\n    private navService: NavigationService,\n    private authService: AuthService\n  ) {\n    this.navService.Menus.subscribe((x) => (this.menuList = x));\n    this.authService.Authenticated.subscribe((x) => (this.authenticated = x));\n  }\n\n  // ngOnInit(): void {\n  // }\n\n  public handleClick(m: NavigationModel): void {\n    if (!!m.Click) {\n      m.Click();\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:44329/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}